/*!
 * PSPDFKit for Node.js 0.0.5 (https://pspdfkit.com/nodejs)
 *
 * Copyright (c) 2024 PSPDFKit GmbH. All rights reserved.
 *
 * THIS SOURCE CODE AND ANY ACCOMPANYING DOCUMENTATION ARE PROTECTED BY INTERNATIONAL COPYRIGHT LAW
 * AND MAY NOT BE RESOLD OR REDISTRIBUTED. USAGE IS BOUND TO THE PSPDFKIT LICENSE AGREEMENT.
 * UNAUTHORIZED REPRODUCTION OR DISTRIBUTION IS SUBJECT TO CIVIL AND CRIMINAL PENALTIES.
 * This notice may not be removed from this file.
 *
 * PSPDFKit uses several open source third-party components: https://pspdfkit.com/acknowledgements/nodejs/
 */var t,e={BUNDLE:"/vendor",GDPICTURE_HASH:"64fd9c8eaeaaa558979a82baf25eeed755b54a89"},r=function t(e){let r;return Object.setPrototypeOf(r=e instanceof Error?e:Error(e),t.prototype),r};function a(t,e){if(!t)throw new r(`Assertion failed: ${e||"Condition not met"}

For further assistance, please go to: https://pspdfkit.com/support/request`)}async function n(t){try{let e=await fetch(t).catch(e=>{throw new r(`Error fetching dynamic fonts file ${t}. ${e}`)});if(200!==e.status)throw new r(`Error fetching dynamic fonts file ${t}. Status code: ${e.status}`);return await e.json().catch(e=>{throw new r(`Error parsing dynamic fonts file ${t}. ${e}`)})}catch(t){throw t}}async function o(t,r){let a;if("string"!=typeof t)return{initDotnet:a}=await import(t.wasmLoaderPath),a(t.baseUrl);{let a=`${e.BUNDLE}/`,n=`${a}gdpicture-${e.GDPICTURE_HASH}/jit`,o=`${n}/initDotnet.js`,i=`${a}gdpicture-${e.GDPICTURE_HASH}/aot`,s=`${i}/initDotnet.js`,f,l;r?(f=`${t}${s}`,l=`${t}${i}`):(f=`${t}${o}`,l=`${t}${n}`);let{initDotnet:c}=await import(f);return c(l)}}r.prototype=Object.create(Error.prototype,{name:{value:"PSPDFKitError",enumerable:!1}});var i=((t=i||{})[t.pdf_a_1a=0]="pdf_a_1a",t[t.pdf_a_1b=1]="pdf_a_1b",t[t.pdf_a_2a=2]="pdf_a_2a",t[t.pdf_a_2u=3]="pdf_a_2u",t[t.pdf_a_2b=4]="pdf_a_2b",t[t.pdf_a_3a=5]="pdf_a_3a",t[t.pdf_a_3u=6]="pdf_a_3u",t[t.pdf_a_3b=7]="pdf_a_3b",t[t.pdf_a_4=8]="pdf_a_4",t[t.pdf_a_4e=9]="pdf_a_4e",t[t.pdf_a_4f=10]="pdf_a_4f",t),s="/create.pdf",f="/save.pdf",l="/create.docx",c="/save.docx",d="/templateData.json",p=("u">typeof WorkerGlobalScope&&(self,WorkerGlobalScope),null),u=null;function _(t,...e){let r;for(let t of(a(u,"GdPicture WebAssembly is not loaded."),e))r=Object.assign(e[0],t);let n=JSON.stringify({type:t,...r}),o=JSON.parse(u.CommandHandler(n));if(!o.success)throw Error(o.errorReason+": "+o.errorMessage+`
`+o.error);return o}var y=new class{_mountCustomFonts(t,e){a(p,"WebAssembly module not loaded."),p.FS.mkdir(e),t.forEach(t=>{p.FS.writeFile(`${e}/${t.name}`,new Uint8Array(t.data))})}async loadModule(t,e,r,a,i,s,f){let{Assemblies:l,Module:c}=await o(t,e);u=l.GdPictureWasm.API,p=c,_("gdpicture/setLicense",{origin:r},{licenseKey:a||"DEMO_PSPDFKIT_WEB"});let d=i?"/fonts":"";if(i&&!p.FS.analyzePath(d).exists&&(this._mountCustomFonts(i,d),_("gdpicture/setFonts",{fontPaths:[d]})),s){let t=await n(s);_("gdpicture/setDynamicFontLoading",{baseUrl:s.split("/").slice(0,-1).join("/"),allowedFonts:t.availableFonts,v:1})}f&&_("gdpicture/setFontSubstitutions",{fontSubstitutions:f})}toPdf(t,e){p.FS.writeFile(s,new Uint8Array(t));let r={file:f,format:"pdf"};e&&e in i&&(r.conformance=e);try{return _("gdpicture/process",{input:{file:s},output:r}),p.FS.readFile(f).buffer}finally{try{p.FS.unlink(f)}catch{}}}async populateDocumentTemplate(t,e){let r;p.FS.writeFile(l,new Uint8Array(t));try{r=JSON.stringify(e,null,2)}catch{throw Error("Invalid config data")}p.FS.writeFile(d,r);try{return _("gdpicture/process-office-template",{inputFile:l,modelAndConfigFile:d,outputFile:c}),p.FS.readFile(c).buffer}finally{try{p.FS.unlink(c),p.FS.unlink(d)}catch{}}}};self.onmessage=async({data:t})=>{let e,r;try{let a=await y[t.action](...t.args);if(e={id:t.id,result:a},Array.isArray(a)){let t=a.filter(t=>t instanceof ArrayBuffer);t.length>0&&(r=t)}a instanceof ArrayBuffer&&(r=[a])}catch(n){let a=[...t.args].filter(t=>t instanceof ArrayBuffer);a.length>0&&(r=a),n.message,n.stack,console.error("[PSPDFKit Internal Debug]"),e={id:t.id,error:n.message||n.toString(),callArgs:t.args}}self.postMessage(e,r)};